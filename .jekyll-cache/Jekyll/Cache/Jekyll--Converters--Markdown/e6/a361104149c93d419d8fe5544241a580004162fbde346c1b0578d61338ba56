I"’*<details open="">
  <summary class="text-delta">
    Table of contents
  </summary>
<ol id="markdown-toc">
  <li><a href="#before-you-begin" id="markdown-toc-before-you-begin">Before you Begin</a>    <ol>
      <li><a href="#logical-operators-in-c-are" id="markdown-toc-logical-operators-in-c-are">Logical operators in C++ are:</a></li>
    </ol>
  </li>
  <li><a href="#if-and-switch" id="markdown-toc-if-and-switch">If and Switch</a>    <ol>
      <li><a href="#if-statements" id="markdown-toc-if-statements">If statements</a></li>
      <li><a href="#switch-case" id="markdown-toc-switch-case">Switch Case</a></li>
    </ol>
  </li>
  <li><a href="#loops" id="markdown-toc-loops">Loops</a></li>
</ol>

</details>

<h1 id="before-you-begin">Before you Begin</h1>

<p>To create an array we need to use [] as shown in the example below:</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include&lt;iostream&gt;
#include&lt;string&gt;
</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="c1">//instead of printing 0 and 1, create an array where </span>
    <span class="c1">//0 = False, 1 = True</span>
    <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">TorF</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span><span class="s">"False"</span><span class="p">,</span> <span class="s">"True"</span><span class="p">};</span>
    
    <span class="kt">int</span> <span class="n">a</span> <span class="o">=</span> <span class="mi">100</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">b</span> <span class="o">=</span> <span class="mi">33</span><span class="p">;</span>
    <span class="kt">int</span> <span class="n">c</span> <span class="o">=</span> <span class="mi">33</span><span class="p">;</span>
    
    <span class="c1">//Print out the string values of each relational operation</span>
    <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"a &lt; b is "</span><span class="o">&lt;&lt;</span><span class="n">TorF</span><span class="p">[</span><span class="n">a</span><span class="o">&lt;</span><span class="n">b</span><span class="p">];</span>
  
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="logical-operators-in-c-are">Logical operators in C++ are:</h3>
<ul>
  <li>&amp;&amp;</li>
  <li><code class="language-plaintext highlighter-rouge">||</code></li>
  <li>!</li>
</ul>

<h1 id="if-and-switch">If and Switch</h1>

<h2 id="if-statements">If statements</h2>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Use if-else statements to control program flow</span>
   <span class="k">if</span><span class="p">(</span><span class="n">skin</span> <span class="o">==</span> <span class="sc">'f'</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Get a dog"</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">skin</span> <span class="o">==</span> <span class="sc">'t'</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Get a bird"</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">else</span> <span class="nf">if</span><span class="p">(</span><span class="n">skin</span> <span class="o">==</span> <span class="sc">'s'</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Would you like an animal that lives in water(w), land(l), or both(b)?"</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cin</span><span class="o">&gt;&gt;</span><span class="n">location</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">location</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>

        <span class="c1">//Use if-else statements to control program flow</span>
        <span class="c1">//note that the curly braces are not necessary if there is only</span>
        <span class="c1">//one line of code.</span>

        <span class="k">if</span><span class="p">(</span><span class="n">location</span> <span class="o">==</span> <span class="sc">'w'</span><span class="p">)</span>
            <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Get a fish"</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span> 
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="switch-case">Switch Case</h2>

<p>Basic Syntax:</p>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">switch</span><span class="p">(</span><span class="n">menuItem</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Skiing?! Sounds dangerous!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
                 <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Sledding?! Sounds like work!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
                 <span class="k">break</span><span class="p">;</span> 
        <span class="k">case</span><span class="p">(</span><span class="mi">3</span><span class="p">):</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Sitting by the fire?! Sounds warm!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
                 <span class="k">break</span><span class="p">;</span>
        <span class="k">case</span><span class="p">(</span><span class="mi">4</span><span class="p">):</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Hot chocolate?! Yum!</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
                 <span class="k">break</span><span class="p">;</span>
        <span class="nl">default:</span> <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Enter a valid menu item"</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></div></div>
<p>If the break statement is not specified (which still works), the next cases after the selection will cascade and be executed</p>

<h1 id="loops">Loops</h1>

<ol>
  <li>
    <p>Simple init, condition, increment <strong>for loops</strong>:</p>

    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
 <span class="p">{</span>
     <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="n">i</span><span class="o">&lt;</span> <span class="mi">10</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
     <span class="p">{</span>
         <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"i = "</span><span class="o">&lt;&lt;</span><span class="n">i</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
     <span class="p">}</span>
     <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
 <span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li><strong>While loops</strong>
    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">while</span><span class="p">(</span><span class="n">entry</span> <span class="o">&lt;=</span><span class="mi">5</span><span class="p">)</span>
 <span class="p">{</span>
     <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"incrementing entry = "</span><span class="o">&lt;&lt;</span><span class="n">entry</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
     <span class="n">entry</span><span class="o">++</span><span class="p">;</span>
 <span class="p">}</span>
</code></pre></div>    </div>
  </li>
  <li>Do While Loops (these execute before checking condition)
    <div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">do</span>
 <span class="p">{</span>
     <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"Count = "</span><span class="o">&lt;&lt;</span><span class="n">count</span><span class="o">&lt;&lt;</span><span class="s">"</span><span class="se">\n</span><span class="s">"</span><span class="p">;</span>
     <span class="n">count</span><span class="o">++</span><span class="p">;</span>
 <span class="p">}</span><span class="k">while</span><span class="p">(</span><span class="n">count</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">);</span>
</code></pre></div>    </div>
  </li>
</ol>

:ET